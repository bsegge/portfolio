knitr::opts_chunk$set(echo = TRUE)
library(partykit)
library(randomForest)
library(tidyverse)
library(tidyverse)
library(knitr)
library(ggpubr)
library(stringr)
library(dplyr)
library(tree)
library(ISLR)
library(effects)
library(mosaic)
library(psych)
library(devtools)
library(pastecs)
library(reshape2)
# Data cleaning
breast_cancer<-read.csv("wisconsin_breast_cancer.csv", header = TRUE)
breast_cancer<-breast_cancer[2:32]
breast_cancer_varnames<-read.csv("variable_names.csv", header = TRUE)
breast_cancer
head(breast_cancer)
names(breast_cancer)
is.na(breast_cancer)
breast_cancer[!complete.cases(breast_cancer),]
# Histogram distribution
multi.hist(breast_cancer[,sapply(breast_cancer, is.numeric)])
# Identify and remove outliers
breast_cancer.cat<-breast_cancer[1]
breast_cancer.num<-breast_cancer[2:31]
remove_outliers <- function(x, na.rm = TRUE, ...) {
qnt <- quantile(x, probs=c(.25, .75), na.rm = na.rm, ...)
H <- 1.5 * IQR(x, na.rm = na.rm)
y <- x
y[x < (qnt[1] - H)] <- NA
y[x > (qnt[2] + H)] <- NA
y
}
breast_cancer.noout.ma <- apply(breast_cancer[2:31], 2, remove_outliers)
breast_cancer.noout.num<-data.frame(breast_cancer.noout.ma)
breast_cancer.noout<-cbind(breast_cancer.cat,breast_cancer.noout.num)
breast_cancer.noout.nona<-na.omit(breast_cancer.noout)
boxplot(breast_cancer)
boxplot(breast_cancer.noout.nona)
names(breast_cancer)
head(breast_cancer)
summary(breast_cancer)
set.seed(231654)
## 75% of the sample size
sample_size <- floor(0.75 * nrow(breast_cancer))
set.seed(2356498)
train_index <- sample(seq_len(nrow(breast_cancer)), size = sample_size)
train <- breast_cancer[train_index, ]
test <- breast_cancer[-train_index, ]
train$id <- NULL
train$X <- NULL
test$id <- NULL
test$X <- NULL
set.seed(3212)
fit <- ctree(diagnosis ~ ., data = train)
plot(fit)
train[train$concave.points_worst<=0.145 & train$area_worst>867.1,1]
train[train$concave.points_worst>0.145 & train$concavity_se<=0.08,1]
testoutput <- as.matrix(as.character(predict(fit, newdata = test)))
(model_accuracy <- mean(testoutput == test$diagnosis))
sidebyside <- as.data.frame(as.character(test$diagnosis))
sidebyside$predicted <- testoutput
names(sidebyside) <- c('observed', 'predicted')
sidebyside
probSuccesss <- summary(test$diagnosis)[1]/sum(summary(test$diagnosis))
randomClass_B <- rbinom(10000, 89, probSuccesss)
randomClass_M <- rbinom(10000, 143-89, 1-probSuccesss)
randomClass <- randomClass_B + randomClass_M
randomClass <- as.data.frame(randomClass)
randomClass$accuracy <- randomClass$randomClass/143
length(filter(randomClass, accuracy >= model_accuracy)[,1])
mu <-  mean(randomClass$randomClass)
stdev <- sd(randomClass$randomClass)
qnorm(0.95, mean = mu, sd = stdev)
